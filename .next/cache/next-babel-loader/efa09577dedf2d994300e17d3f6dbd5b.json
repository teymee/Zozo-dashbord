{"ast":null,"code":"import _defineProperty from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Gigs\\\\Zozo\\\\admin template\\\\martfury-admin-react\\\\pages\\\\HOC\\\\authRoute.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// HOC/withAuth.jsx\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../store/API/Api\";\n\nvar authRoute = function authRoute(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  return _s(function (props) {\n    _s();\n\n    var Router = useRouter();\n\n    var _useState = useState(false),\n        verified = _useState[0],\n        setVerified = _useState[1];\n\n    useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accessToken, whoami, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              accessToken = API.TOKEN; // if no accessToken was found,then we redirect to \"/\" page.\n\n              if (accessToken) {\n                _context2.next = 6;\n                break;\n              }\n\n              Router.replace(\"/admin/login\");\n              console.log(accessToken);\n              _context2.next = 11;\n              break;\n\n            case 6:\n              // we call the api that verifies the token.\n              whoami = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var url, config, data;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          url = API.BASE_URL + \"/whoami\";\n                          console.log(API.TOKEN);\n                          config = {\n                            headers: {\n                              Authorization: \"Bearer \" + API.TOKEN\n                            }\n                          };\n                          _context.next = 5;\n                          return axios.get(url, config).then(function (res) {\n                            return res.data;\n                          });\n\n                        case 5:\n                          data = _context.sent;\n                          return _context.abrupt(\"return\", data);\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function whoami() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context2.next = 9;\n              return whoami(API.BASE_URL);\n\n            case 9:\n              data = _context2.sent;\n\n              // if token was verified we set the state.\n              if (data.verified) {\n                setVerified(data.account);\n              } else {\n                // If the token was fraud we first remove it from localStorage and then redirect to \"/\"\n                localStorage.removeItem(\"accessToken\");\n                Router.replace(\"/admin/login\");\n              }\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })), []);\n\n    if (verified) {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, _this);\n    } else {\n      return null;\n    }\n  }, \"irrnzWYVzfxH8jqgFP57yP7xP7c=\", false, function () {\n    return [useRouter];\n  });\n};\n\nexport default authRoute;","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/pages/HOC/authRoute.jsx"],"names":["useRouter","useEffect","useState","axios","API","authRoute","WrappedComponent","props","Router","verified","setVerified","accessToken","TOKEN","replace","console","log","whoami","url","BASE_URL","config","headers","Authorization","get","then","res","data","account","localStorage","removeItem"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,qBAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAsB;AAAA;;AACvC,YAAO,UAACC,KAAD,EAAW;AAAA;;AACjB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;;AADiB,oBAEeE,QAAQ,CAAC,KAAD,CAFvB;AAAA,QAEVO,QAFU;AAAA,QAEAC,WAFA;;AAIjBT,IAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACHU,cAAAA,WADG,GACWP,GAAG,CAACQ,KADf,EAGT;;AAHS,kBAIJD,WAJI;AAAA;AAAA;AAAA;;AAKRH,cAAAA,MAAM,CAACK,OAAP,CAAe,cAAf;AACoBC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AANZ;AAAA;;AAAA;AAQR;AACMK,cAAAA,MATE;AAAA,qFASO;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,0BAAAA,GADQ,GACFb,GAAG,CAACc,QAAJ,GAAe,SADb;AAEdJ,0BAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACQ,KAAhB;AACMO,0BAAAA,MAHQ,GAGC;AACdC,4BAAAA,OAAO,EAAE;AACRC,8BAAAA,aAAa,EAAE,YAAYjB,GAAG,CAACQ;AADvB;AADK,2BAHD;AAAA;AAAA,iCAQKT,KAAK,CAACmB,GAAN,CAAUL,GAAV,EAAeE,MAAf,EAAuBI,IAAvB,CAA4B,UAACC,GAAD,EAAS;AACvD,mCAAOA,GAAG,CAACC,IAAX;AACA,2BAFkB,CARL;;AAAA;AAQRA,0BAAAA,IARQ;AAAA,2DAYPA,IAZO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATP;;AAAA,gCASFT,MATE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBWA,MAAM,CAACZ,GAAG,CAACc,QAAL,CAvBjB;;AAAA;AAuBFO,cAAAA,IAvBE;;AAwBR;AACA,kBAAIA,IAAI,CAAChB,QAAT,EAAmB;AAClBC,gBAAAA,WAAW,CAACe,IAAI,CAACC,OAAN,CAAX;AACA,eAFD,MAEO;AACN;AACAC,gBAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACApB,gBAAAA,MAAM,CAACK,OAAP,CAAe,cAAf;AACA;;AA/BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAiCN,EAjCM,CAAT;;AAmCA,QAAIJ,QAAJ,EAAc;AAEb,0BAAO,QAAC,gBAAD,oBAAsBF,KAAtB;AAAA;AAAA;AAAA;AAAA,eAAP;AACA,KAHD,MAGO;AACN,aAAO,IAAP;AACA;AACD,GA7CD;AAAA,YACgBP,SADhB;AAAA;AA8CA,CA/CD;;AAiDA,eAAeK,SAAf","sourcesContent":["// HOC/withAuth.jsx\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"\r\nimport { API } from \"../../store/API/Api\";\r\n\r\nconst authRoute = (WrappedComponent) => {\r\n\treturn (props) => {\r\n\t\tconst Router = useRouter();\r\n\t\tconst [verified, setVerified] = useState(false);\r\n\r\n\t\tuseEffect(async () => {\r\n\t\t\tconst accessToken = API.TOKEN;\r\n               \r\n\t\t\t// if no accessToken was found,then we redirect to \"/\" page.\r\n\t\t\tif (!accessToken) {\r\n\t\t\t\tRouter.replace(\"/admin/login\");\r\n                        console.log(accessToken)\r\n\t\t\t} else {\r\n\t\t\t\t// we call the api that verifies the token.\r\n\t\t\t\tconst whoami = async () => {\r\n\t\t\t\t\tconst url = API.BASE_URL + \"/whoami\";\r\n\t\t\t\t\tconsole.log(API.TOKEN);\r\n\t\t\t\t\tconst config = {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: \"Bearer \" + API.TOKEN,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconst data = await axios.get(url, config).then((res) => {\r\n\t\t\t\t\t\treturn res.data;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t};\r\n\t\t\t\tconst data = await whoami(API.BASE_URL);\r\n\t\t\t\t// if token was verified we set the state.\r\n\t\t\t\tif (data.verified) {\r\n\t\t\t\t\tsetVerified(data.account);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If the token was fraud we first remove it from localStorage and then redirect to \"/\"\r\n\t\t\t\t\tlocalStorage.removeItem(\"accessToken\");\r\n\t\t\t\t\tRouter.replace(\"/admin/login\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, []);\r\n\r\n\t\tif (verified) {\r\n\r\n\t\t\treturn <WrappedComponent {...props} />;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default authRoute;\r\n"]},"metadata":{},"sourceType":"module"}