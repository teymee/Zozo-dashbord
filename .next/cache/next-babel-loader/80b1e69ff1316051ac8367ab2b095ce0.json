{"ast":null,"code":"import _defineProperty from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Gigs\\\\Zozo\\\\admin template\\\\martfury-admin-react\\\\pages\\\\HOC\\\\authRoute.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// HOC/withAuth.jsx\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"../../store/API/Api\";\n\nvar authRoute = function authRoute(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  return _s(function (props) {\n    _s();\n\n    var Router = useRouter();\n\n    var _useState = useState(false),\n        verified = _useState[0],\n        setVerified = _useState[1];\n\n    useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accessToken, whoami, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              accessToken = API.TOKEN; // if no accessToken was found,then we redirect to \"/\" page.\n\n              if (accessToken) {\n                _context2.next = 5;\n                break;\n              }\n\n              Router.replace(\"/admin/login\");\n              _context2.next = 10;\n              break;\n\n            case 5:\n              // we call the api that verifies the token.\n              whoami = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var url, config, data;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          url = API.BASE_URL + \"/whoami\";\n                          console.log(API.TOKEN);\n                          config = {\n                            headers: {\n                              Authorization: \"Bearer \" + API.TOKEN\n                            }\n                          };\n                          _context.next = 5;\n                          return axios.get(url, config).then(function (res) {\n                            return res.data;\n                          });\n\n                        case 5:\n                          data = _context.sent;\n                          return _context.abrupt(\"return\", data);\n\n                        case 7:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function whoami() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context2.next = 8;\n              return whoami(API.BASE_URL);\n\n            case 8:\n              data = _context2.sent;\n\n              // if token was verified we set the state.\n              if (data.verified) {\n                setVerified(data.account);\n              } else {\n                // If the token was fraud we first remove it from localStorage and then redirect to \"/\"\n                localStorage.removeItem(\"accessToken\");\n                Router.replace(\"/admin/login\");\n              }\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })), []);\n\n    if (verified) {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, _this);\n    } else {\n      return null;\n    }\n  }, \"irrnzWYVzfxH8jqgFP57yP7xP7c=\", false, function () {\n    return [useRouter];\n  });\n};\n\nexport default authRoute;","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/pages/HOC/authRoute.jsx"],"names":["useRouter","useEffect","useState","API","authRoute","WrappedComponent","props","Router","verified","setVerified","accessToken","TOKEN","replace","whoami","url","BASE_URL","console","log","config","headers","Authorization","axios","get","then","res","data","account","localStorage","removeItem"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,GAAT,QAAoB,qBAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAsB;AAAA;;AACtC,YAAO,UAACC,KAAD,EAAW;AAAA;;AAChB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;;AADgB,oBAEgBE,QAAQ,CAAC,KAAD,CAFxB;AAAA,QAETM,QAFS;AAAA,QAECC,WAFD;;AAIhBR,IAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACFS,cAAAA,WADE,GACYP,GAAG,CAACQ,KADhB,EAER;;AAFQ,kBAGHD,WAHG;AAAA;AAAA;AAAA;;AAINH,cAAAA,MAAM,CAACK,OAAP,CAAe,cAAf;AAJM;AAAA;;AAAA;AAMN;AACMC,cAAAA,MAPA;AAAA,qFAOS;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,0BAAAA,GADK,GACCX,GAAG,CAACY,QAAJ,GAAa,SADd;AAEXC,0BAAAA,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACQ,KAAhB;AACMO,0BAAAA,MAHK,GAGI;AACTC,4BAAAA,OAAO,EAAE;AACHC,8BAAAA,aAAa,EAAE,YAAYjB,GAAG,CAACQ;AAD5B;AADA,2BAHJ;AAAA;AAAA,iCAQQU,KAAK,CAACC,GAAN,CAAUR,GAAV,EAAeI,MAAf,EAAuBK,IAAvB,CAA4B,UAACC,GAAD,EAAS;AAClD,mCAAOA,GAAG,CAACC,IAAX;AACL,2BAFkB,CARR;;AAAA;AAQLA,0BAAAA,IARK;AAAA,2DAYJA,IAZI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPT;;AAAA,gCAOAZ,MAPA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAqBaA,MAAM,CAACV,GAAG,CAACY,QAAL,CArBnB;;AAAA;AAqBAU,cAAAA,IArBA;;AAsBN;AACA,kBAAIA,IAAI,CAACjB,QAAT,EAAmB;AACjBC,gBAAAA,WAAW,CAACgB,IAAI,CAACC,OAAN,CAAX;AACD,eAFD,MAEO;AACL;AACAC,gBAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACArB,gBAAAA,MAAM,CAACK,OAAP,CAAe,cAAf;AACD;;AA7BK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IA+BN,EA/BM,CAAT;;AAiCA,QAAIJ,QAAJ,EAAc;AACZ,0BAAO,QAAC,gBAAD,oBAAsBF,KAAtB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF,GA1CD;AAAA,YACiBN,SADjB;AAAA;AA2CD,CA5CD;;AA8CA,eAAeI,SAAf","sourcesContent":["// HOC/withAuth.jsx\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { API } from \"../../store/API/Api\";\r\n\r\nconst authRoute = (WrappedComponent) => {\r\n  return (props) => {\r\n    const Router = useRouter();\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    useEffect(async () => {\r\n      const accessToken = API.TOKEN;\r\n      // if no accessToken was found,then we redirect to \"/\" page.\r\n      if (!accessToken) {\r\n        Router.replace(\"/admin/login\");\r\n      } else {\r\n        // we call the api that verifies the token.\r\n        const whoami = async () => {\r\n            const url = API.BASE_URL+\"/whoami\";\r\n            console.log(API.TOKEN)\r\n            const config = {\r\n                  headers: {\r\n                        Authorization: \"Bearer \" + API.TOKEN,\r\n                  },\r\n            };\r\n            const data = await axios.get(url, config).then((res) => {\r\n                  return res.data;\r\n            });\r\n      \r\n            return data;\r\n      };\r\n        const data = await whoami(API.BASE_URL);\r\n        // if token was verified we set the state.\r\n        if (data.verified) {\r\n          setVerified(data.account);\r\n        } else {\r\n          // If the token was fraud we first remove it from localStorage and then redirect to \"/\"\r\n          localStorage.removeItem(\"accessToken\");\r\n          Router.replace(\"/admin/login\");\r\n        }\r\n      }\r\n    }, []);\r\n    \r\n    if (verified) {\r\n      return <WrappedComponent {...props} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default authRoute;"]},"metadata":{},"sourceType":"module"}