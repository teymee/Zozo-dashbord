{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\nimport { actionTypes, loginSuccess, logOutSuccess, registerSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: \"Welcome back\",\n    description: \"You are login successful!\"\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: \"Good bye!\",\n    description: \"Your account has been logged out!\"\n  });\n}; //LOGIN\n\n\nconst loginAdmin = async loginCred => {\n  console.log(loginCred);\n  const url = API.BASE_URL + \"/login\";\n  console.log(url);\n  const data = axios.post(url, loginCred).then(response => {\n    localStorage.setItem(\"token\", response.data.token);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n  return data;\n}; //REGISTER\n\n\nconst registerAdmin = async registerCred => {\n  console.log(registerCred); // const url = \"https://zozo-auction.herokuapp.com/api/v1/merchant/create\"\n\n  const url = API.ADMIN_BASE_URL + \"/admin/create\";\n  console.log(url);\n  const data = axios.post(url, registerCred).then(response => {\n    console.log(response.data.token);\n    localStorage.setItem(\"token\", response.data.token);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n  return data;\n};\n\nfunction* loginSaga(payload) {\n  try {\n    const isLogin = yield call(loginAdmin, payload.loginCred);\n\n    if (isLogin) {\n      yield put(loginSuccess(isLogin));\n      modalSuccess(\"success\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* registerSaga(payload) {\n  try {\n    console.log(payload.registerCred);\n    const isRegistered = yield call(registerAdmin, payload.registerCred);\n\n    if (isRegistered) {\n      yield put(registerSuccess(isRegistered));\n      modalSuccess(\"success\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning(\"warning\");\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/auth/saga.js"],"names":["all","call","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","registerSuccess","API","modalSuccess","type","message","description","modalWarning","loginAdmin","loginCred","console","log","url","BASE_URL","data","post","then","response","localStorage","setItem","token","catch","err","registerAdmin","registerCred","ADMIN_BASE_URL","loginSaga","payload","isLogin","registerSaga","isRegistered","logOutSaga","rootSaga","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT"],"mappings":"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","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\n\nimport {\n\tactionTypes,\n\tloginSuccess,\n\tlogOutSuccess,\n\tregisterSuccess,\n} from \"./action\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Welcome back\",\n\t\tdescription: \"You are login successful!\",\n\t});\n};\n\nconst modalWarning = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Good bye!\",\n\t\tdescription: \"Your account has been logged out!\",\n\t});\n};\n\n//LOGIN\nconst loginAdmin = async (loginCred) => {\n\tconsole.log(loginCred);\n\tconst url = API.BASE_URL + \"/login\";\n\n\tconsole.log(url);\n\tconst data = axios\n\t\t.post(url, loginCred)\n\t\t.then((response) => {\n\t\t\tlocalStorage.setItem(\"token\", response.data.token);\n\n\t\t\treturn response.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\treturn data;\n};\n\n\n//REGISTER\n\nconst registerAdmin = async (registerCred) => {\n\tconsole.log(registerCred);\n\t// const url = \"https://zozo-auction.herokuapp.com/api/v1/merchant/create\"\n\tconst url = API.ADMIN_BASE_URL + \"/admin/create\";\n\tconsole.log(url);\n\n\tconst data = axios\n\t\t.post(url, registerCred)\n\t\t.then((response) => {\n\t\t\tconsole.log(response.data.token);\n\t\t\tlocalStorage.setItem(\"token\", response.data.token);\n\t\t\treturn response.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\treturn data;\n};\n\nfunction* loginSaga(payload) {\n\ttry {\n\t\tconst isLogin = yield call(loginAdmin, payload.loginCred);\n\t\tif (isLogin) {\n\t\t\tyield put(loginSuccess(isLogin));\n\t\t\tmodalSuccess(\"success\");\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* registerSaga(payload) {\n\ttry {\n\t\tconsole.log(payload.registerCred);\n\t\tconst isRegistered = yield call(registerAdmin, payload.registerCred);\n\t\tif (isRegistered) {\n\t\t\tyield put(registerSuccess(isRegistered));\n\t\t\tmodalSuccess(\"success\");\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* logOutSaga() {\n\ttry {\n\t\tyield put(logOutSuccess());\n\t\tmodalWarning(\"warning\");\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport default function* rootSaga() {\n\tyield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\tyield all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n\tyield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}