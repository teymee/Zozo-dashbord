{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(registerSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\nimport { actionTypes, loginSuccess, logOutSuccess, registerSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: \"Welcome back\",\n    description: \"You are login successful!\"\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  if (type === \"error\") {\n    notification[type]({\n      message: \"Login Error\",\n      description: \"Invalid Email or Password \"\n    });\n  }\n\n  notification[type]({\n    message: \"Good bye!\",\n    description: \"Your account has been logged out!\"\n  });\n};\n\nvar modalLoginError = function modalLoginError(type) {\n  notification[type]({\n    message: \"Login Error\",\n    description: \"Invalid Email or Password \"\n  });\n}; //LOGIN\n\n\nvar loginAdmin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(loginCred) {\n    var url, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(loginCred);\n            url = API.BASE_URL + \"/login\";\n            console.log(url);\n            data = axios.post(url, loginCred).then(function (response) {\n              localStorage.setItem(\"token\", response.data.token);\n              return response.data;\n            })[\"catch\"](function (err) {\n              console.log(err);\n              return false;\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginAdmin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //REGISTER\n\n\nvar registerAdmin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(registerCred) {\n    var url, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(registerCred); // const url = \"https://zozo-auction.herokuapp.com/api/v1/merchant/create\"\n\n            url = API.ADMIN_BASE_URL + \"/admin/create\";\n            console.log(url);\n            data = axios.post(url, registerCred).then(function (response) {\n              console.log(response.data.token);\n              localStorage.setItem(\"token\", response.data.token);\n              return response.data;\n            })[\"catch\"](function (err) {\n              console.log(err);\n            });\n            return _context2.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerAdmin(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction loginSaga(payload) {\n  var isLogin;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loginAdmin, payload.loginCred);\n\n        case 3:\n          isLogin = _context3.sent;\n\n          if (isLogin) {\n            _context3.next = 8;\n            break;\n          }\n\n          modalLoginError(\"error\");\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.next = 10;\n          return put(loginSuccess(isLogin));\n\n        case 10:\n          modalSuccess(\"success\");\n\n        case 11:\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}\n\nfunction registerSaga(payload) {\n  var isRegistered;\n  return _regeneratorRuntime.wrap(function registerSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          console.log(payload.registerCred);\n          _context4.next = 4;\n          return call(registerAdmin, payload.registerCred);\n\n        case 4:\n          isRegistered = _context4.sent;\n\n          if (isRegistered) {\n            _context4.next = 9;\n            break;\n          }\n\n          modalRegisteredError(\"error\");\n          _context4.next = 12;\n          break;\n\n        case 9:\n          _context4.next = 11;\n          return put(registerSuccess(isRegistered));\n\n        case 11:\n          modalSuccess(\"success\");\n\n        case 12:\n          _context4.next = 17;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[0, 14]]);\n}\n\nfunction logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning(\"warning\");\n          _context5.next = 9;\n          break;\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context6.next = 4;\n          return all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n\n        case 4:\n          _context6.next = 6;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/auth/saga.js"],"names":["loginSaga","registerSaga","logOutSaga","rootSaga","all","call","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","registerSuccess","API","modalSuccess","type","message","description","modalWarning","modalLoginError","loginAdmin","loginCred","console","log","url","BASE_URL","data","post","then","response","localStorage","setItem","token","err","registerAdmin","registerCred","ADMIN_BASE_URL","payload","isLogin","isRegistered","modalRegisteredError","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT"],"mappings":"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","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\n\nimport {\n\tactionTypes,\n\tloginSuccess,\n\tlogOutSuccess,\n\tregisterSuccess,\n} from \"./action\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Welcome back\",\n\t\tdescription: \"You are login successful!\",\n\t});\n};\n\nconst modalWarning = (type) => {\n\tif (type === \"error\") {\n\t\tnotification[type]({\n\t\t\tmessage: \"Login Error\",\n\t\t\tdescription: \"Invalid Email or Password \",\n\t\t});\n\t}\n\tnotification[type]({\n\t\tmessage: \"Good bye!\",\n\t\tdescription: \"Your account has been logged out!\",\n\t});\n};\n\nconst modalLoginError = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Login Error\",\n\t\tdescription: \"Invalid Email or Password \",\n\t});\n};\n\n//LOGIN\nconst loginAdmin = async (loginCred) => {\n\tconsole.log(loginCred);\n\tconst url = API.BASE_URL + \"/login\";\n\n\tconsole.log(url);\n\tconst data = axios\n\t\t.post(url, loginCred)\n\t\t.then((response) => {\n\t\t\tlocalStorage.setItem(\"token\", response.data.token);\n\n\t\t\treturn response.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\treturn false;\n\t\t});\n\treturn data;\n};\n\n//REGISTER\nconst registerAdmin = async (registerCred) => {\n\tconsole.log(registerCred);\n\t// const url = \"https://zozo-auction.herokuapp.com/api/v1/merchant/create\"\n\tconst url = API.ADMIN_BASE_URL + \"/admin/create\";\n\tconsole.log(url);\n\n\tconst data = axios\n\t\t.post(url, registerCred)\n\t\t.then((response) => {\n\t\t\tconsole.log(response.data.token);\n\t\t\tlocalStorage.setItem(\"token\", response.data.token);\n\t\t\treturn response.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\treturn data;\n};\n\n\n\nfunction* loginSaga(payload) {\n\ttry {\n\t\tconst isLogin = yield call(loginAdmin, payload.loginCred);\n\t\tif (!isLogin) {\n\t\t\tmodalLoginError(\"error\");\n\t\t} else {\n\t\t\tyield put(loginSuccess(isLogin));\n\t\t\tmodalSuccess(\"success\");\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* registerSaga(payload) {\n\ttry {\n\t\tconsole.log(payload.registerCred);\n\t\tconst isRegistered = yield call(registerAdmin, payload.registerCred);\n\n\t\tif (!isRegistered) {\n\t\t\tmodalRegisteredError(\"error\");\n\t\t} else {\n\t\t\tyield put(registerSuccess(isRegistered));\n\t\t\tmodalSuccess(\"success\");\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* logOutSaga() {\n\ttry {\n\t\tyield put(logOutSuccess());\n\t\tmodalWarning(\"warning\");\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport default function* rootSaga() {\n\tyield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\tyield all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n\tyield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}